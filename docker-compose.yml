version: '3.8'

services:
  # --- основная БД ---
  db:
    image: postgres:15
    container_name: postgres-primary
    env_file:
      - .env
    environment:
      # эти переменные берутся из .env
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5434:5432"  # Changed from 5432 to 5434 to avoid conflict
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      retries: 5

  # --- тестовая БД ---
  test-db:
    image: postgres:15
    container_name: postgres-test
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
      POSTGRES_DB: ${TEST_DB_NAME}
    ports:
      - "5435:5432"  # Changed from 5432 to 5435 to avoid conflict
    volumes:
      - test-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TEST_DB_USER}"]
      interval: 10s
      retries: 5

  # --- Redis ---
  redis:
    image: redis:7-alpine
    container_name: test-hack-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  # --- Go backend ---
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      test-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # Переопределяем хосты, т.к. в контейнере localhost — это сам контейнер
      DB_HOST: db
      DB_PORT: 5432  # Internal port remains 5432
      TEST_DB_HOST: test-db
      TEST_DB_PORT: 5432  # Internal port remains 5432
      REDIS_ADDR: redis:6379
    ports:
      - "8080:8080"
    restart: on-failure

volumes:
  db-data:
  test-db-data:
